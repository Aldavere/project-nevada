*PNXFTSprintMain*

{{{

scn PNXFBSprintMainScript

;Sprint variables
short enableStrafe
short enableBlur
short isSprinting
float sprintSpeed
short healOnce
short weaponsOut
float timeOut

;AP drain variables
short apTick
float apTimer

;Sound variables
short enableSounds
float breatheTimer
short isAPLow
short isBreathing

;View bob variables
float shakeTimer
ref explosionRef

;FOV variables
float defaultFOV
float default1stPersonFOV
short FOVChange
float currentFOV
float FOVIncrease

;Controls
short sneakKey
float sensitivity
short reSneak
short reEqpWep
float reEqpWepTimer
short reWalk

; SprintSettings.

short tackleMode
short turnRad 

short customKey
short runKey
short delay

float defaultFOV
float default1stPersonFOV

; Global
float SprintAPMult
float SprintSpeedMult


Begin GameMode

;Set controls
if (customKey == 0)
	if (getControl 9 != -1)
		set runKey to getControl 9
	elseif (isKeyPressed runKey == 0)
		setControl 9 runKey
	endif
endif

;Sounds
;if (isSprinting == 1 && enableSounds == 1)
;	if (isBreathing == 0 && player.getAV actionPoints < player.getBaseAV actionPoints / 4 && breatheTimer <= 0)
;		set isBreathing to 1
;	endif
;endif
;
;if (breatheTimer > 0)
;	set breatheTimer to breatheTimer - getSecondsPassed
;else
;	if (isBreathing == 1)
;		if (player.getav actionPoints < player.getbaseav actionPoints / 4)
;			if (getPCIsSex Male == 1)
;				playSound PNXFBSprintBreatheLoop
;			else
;				playSound PNXFBSprintFemaleBreatheLoop
;			endif
;			set breatheTimer to 8
;		else
;			if (getPCIsSex Male == 1)
;				playSound PNXFBSprintBreatheEnd
;			else
;				playSound PNXFBSprintFemaleBreatheEnd
;			endif
;			set isBreathing to 0
;			set breatheTimer to 10
;		endif
;	endif
;endif

;Triggers a HUD shudder regularly while sprinting
if (isSprinting == 1 && shakeTimer < 0)
	set explosionRef to player.placeAtMe PNXFBSprintExplosion	
	explosionRef.disable
	explosionRef.markForDelete	
	set shakeTimer to 1
endif
if (shakeTimer >= 0)
	set shakeTimer to shakeTimer - getSecondsPassed
endif

;Damage the player's action points every 1/10 seconds if they're sprinting
set apTick to (25 - player.getav endurance) * SprintAPMult
if (isSprinting == 1 && apTimer < 0)
	set apTick to apTick / 10
	player.damageAV ActionPoints apTick
	set apTimer to 0.1
endif

if (isSprinting == 1 && apTimer >= 0)
	set apTimer to apTimer - getSecondsPassed
endif

;Repairs the damage we did to the player's leg
if (healOnce == 1)
	player.restoreAV LeftMobilityCondition 1
	set healOnce to 0
endif

;Smoothly widens or narrows the FOV as necessary
if (FOVChange == 1)
	set currentFOV to currentFOV + 1
	con_SetCameraFOV currentFOV
	if (currentFOV >= defaultFOV + FOVIncrease)
		set FOVChange to 0
	endif
	setNumericIniSetting "fdefault1stpersonfov:display" default1stPersonFOV ;Changing the FOV also changes this, so we need to change it back to its default
endif

elseif (FOVChange == -1)
	set currentFOV to currentFOV - 1
	con_SetCameraFOV currentFOV
	if (currentFOV <= defaultFOV)
		set FOVChange to 0
	endif
	setNumericIniSetting "fdefault1stpersonfov:display" default1stPersonFOV
endif

;Tries to make sure the player's weapon gets re-equipped if they stop sprinting while the weapon is still being put away
if (isSprinting == 0 && reEqpWep == 1 && reEqpWepTimer > 0)
	set reEqpWepTimer to reEqpWepTimer - getSecondsPassed
endif

if (player.hasperk PNXFBSprintChargePerk == 0 && reEqpWep == 1 && reEqpWepTimer <= 0)
	tapControl 4
	set reEqpWep to 0
endif

;Forces the player into run mode if necessary
if (isSprinting == 1 && player.isRunning == 0)
	tapControl 10
	set reWalk to 1
endif
if (isSprinting == 0 && reWalk == 1)
	tapControl 10
	set reWalk to 0
endif

;Counts down timeout
if (timeOut >= 0)
	set timeOut to timeOut - getSecondsPassed
endif

;Prevents sprinting right after firing or aiming a weapon
if (isSprinting == 0) 
	if (isControlPressed 6 == 1)
		set timeOut to 0.5
	endif
	if (isControlPressed 4 == 1)
		set timeOut to 1
	endif
endif

;Prevents inadvertant walking
if (player.getav actionpoints < apTick || timeOut > 0)
	disableControl 9
else
	enableControl 9
endif
	
;Begins the sprint
if (isSprinting == 0 && isKeyPressed runKey == 1 && player.isMoving == 1 && player.getAV ActionPoints > apTick && player.getAV LeftMobilityCondition > 0 && player.getAV RightMobilityCondition > 0 && player.isSwimming == 0 && player.getAV InventoryWeight <= player.getAV CarryWeight+1 && isControlPressed 6 == 0 && timeOut < 0 && getPlayerControlsDisabled 1 0 1 0 1 0 0 == 0)
	set isSprinting to 1

	if (customKey == 0)
		setControl 9 -1
	endif

	if (enableStrafe == 0)
		disableControl 2 ;Disables left and right strafe
		disableControl 3
	endif
	
	set sprintSpeed to (player.getav agility * 8 + 40 * (1 - .75 * player.getAV inventoryWeight / player.getAV carryWeight)) * SprintSpeedMult
	player.modAV SpeedMult sprintSpeed
	
	
	if (FOVChange == 0)
		set defaultFOV to GetNumericIniSetting "fDefaultWorldFOV:display"
		set default1stPersonFOV to GetNumericIniSetting "fDefault1stPersonFOV:display"
	endif
	set FOVChange to 1
	set currentFOV to defaultFOV
	set FOVIncrease to sprintSpeed / 10


	player.damageAV LeftMobilityCondition 1 ;Damages the player's leg in order to force the game to reevaluate the player's speed
	set healOnce to 1

	if (player.isWeaponOut == 1) ;If the player had their weapon out, remember to re-equip it later
		set reEqpWep to 1
		set reEqpWepTimer to 0.7
	endif
	if (player.isSneaking == 1) ;If the player was sneaking, remember to go back to sneaking later
		set reSneak to 1
	endif

	if (player.hasPerk PNXFBSprintChargePerk == 0)
		DisablePlayerControls 0 0 1 0 0 0 1
	else
		DisablePlayerControls 0 0 0 0 0 0 1
	endif

	if (turnRad > 1)
		set sensitivity to getNumericIniSetting "fMouseSensitivity:controls" 	
		set sensitivity to sensitivity / turnRad
		setNumericIniSetting "fMouseSensitivity:controls" sensitivity	;increases turning radius
	endif

	if (enableBlur == 1)
		imod PNXFBSprintBlurIFX
	endif

	player.addPerk PNXFBSprintChargeSpreadPerk
endif

;Ends the sprint
if (isSprinting == 1 && (player.isMoving == 0 || isKeyPressed runKey == 0 || player.getAV ActionPoints < apTick / 10 || player.isSwimming == 1 || player.getav LeftMobilityCondition <= 0 || player.getav RightMobilityCondition <= 0 || player.getav InventoryWeight > player.getAV CarryWeight+1 || isControlPressed 6 == 1 || timeOut > 0 || getPlayerControlsDisabled 1 0 0 0 1 0 0 == 1))
		set isSprinting to 0

		if (enableStrafe == 0)
			enableControl 2
			enableControl 3
		endif

		set sprintSpeed to sprintSpeed  * -1
		player.modAV SpeedMult sprintSpeed

		set FOVChange to -1
		
		player.Damageav LeftMobilityCondition 1
		set healOnce to 1

		EnablePlayerControls 0 0 1 0 0 0 1

		if (reEqpWep == 1 && player.hasPerk PNXFBSprintChargePerk == 0) ;Re-equip the player's weapon if they had it out before the sprint
			TapControl 4
		endif
		if (reSneak == 1) ;Goes back to sneaking if necessary
			tapControl 8	
			set reSneak to 0
		endif

		if (turnRad > 1)
			set sensitivity to sensitivity * turnRad
			setNumericIniSetting "fMouseSensitivity:controls" sensitivity ;Returns the turning radius to normal
		endif

		if (enableBlur == 1)
			rimod PNXFBSprintBlurIFX
		endif

		set timeOut to 1

		player.removePerk PNXFBSprintChargeSpreadPerk
endif

End

}}}