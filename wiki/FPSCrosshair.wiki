#summary Crosshair Script

{{{
scn PNxFPSCrosshairMainScript

short trap
float tmp

short running
short unaimed
short standing
short walking

float runningPenalty
float standingPenalty
float unaimedPenalty
float walkingPenalty
float armConditionPenalty
float skillReqPenalty
float strReqPenalty
float skillBonusMult
float weaponSpread
float recoilSpread
float mouseSpread 
float playerSpread
float totalSpread

float fRunningSpreadPenaltyGMST
float fStandingSpreadPenaltyGMST
float fUnaimedSpreadPenaltyGMST
float fWalkingSpreadPenaltyGMST
float fMinGunSpreadValueGMST
float fCrippledArm1HSpreadPenaltyGMST
float fCrippledArm2HSpreadPenaltyGMST
float fCrippledArms1HSpreadPenaltyGMST
float fCrippledArms2HSpreadPenaltyGMST

ref weapon
short weaponSkill
short weaponType
short weaponHands
float weaponMinSpread
short weaponSkillReq
short weaponStrReq

float skillValue
float strValue
short reqDiff 
short crippledArms

float spreadDeg
float fovDeg

float curSpread
float nextSpread

; Real mult between 0.5 and 1.5
float accuracyMult

; Steps used for rounding with perks since we cant use a the real accuracyMult
short accuracyRank
short lastAccuracyRank

short attackTrap

short ammoCount
short lastAmmoCount
short ammoDiff

float dt
float HAngle
float VAngle
float lastHAngle
float lastVAngle
float dhs
float dvs
float s
float v
float vAvg
; old speeds for avg
float v1
float v2

float recoilCooldown


;------------------------------------------------------------------------------------------------------------------------------------------
Begin GameMode

if getGameLoaded == 1
	set fRunningSpreadPenaltyGMST to getNumericGameSetting fRunningSpreadPenalty
	set fStandingSpreadPenaltyGMST to getNumericGameSetting fStandingSpreadPenalty
	set fUnaimedSpreadPenaltyGMST to getNumericGameSetting fUnaimedSpreadPenalty
	set fWalkingSpreadPenaltyGMST to getNumericGameSetting fWalkingSpreadPenalty
	set fCrippledArm1HSpreadPenaltyGMST to getNumericGameSetting fCrippledArm1HSpreadPenalty
	set fCrippledArm2HSpreadPenaltyGMST to getNumericGameSetting fCrippledArm2HSpreadPenalty
	set fCrippledArms1HSpreadPenaltyGMST to getNumericGameSetting fCrippledArms1HSpreadPenalty
	set fCrippledArms2HSpreadPenaltyGMST to getNumericGameSetting fCrippledArms2HSpreadPenalty
	set  fMinGunSpreadValueGMST to getNumericGameSetting fMinGunSpreadValue
endif

set weapon to player.getEquippedObject 5

if weapon == 0 || player.isWeaponOut == 0
	setUIFloat "HUDMainMenu\_PNxCrosshairEnabled" 0
	return
endif

setUIFloat "HUDMainMenu\_PNxCrosshairEnabled" 1


;------------------------------------------------
; Running + walking penalties
if isControlPressed 0 == 1 || isControlPressed 1 == 1 || isControlPressed 2 == 1 || isControlPressed 3 == 1 || isControlPressed 12 == 1
	set walking to 1
	if player.isRunning == 1
		set running to 1
	else
		set running to 0
	endif
else
	set walking to 0
	set running to 0
endif

set runningPenalty to fRunningSpreadPenaltyGMST * running
set walkingPenalty to fWalkingSpreadPenaltyGMST * walking


;------------------------------------------------
; Unaimed penalty
if isControlPressed 6 == 1
	set unaimed to 0
else
	set unaimed to 1
endif

set unaimedPenalty to fUnaimedSpreadPenaltyGMST * unaimed


;------------------------------------------------
; Standing penalty
set standing to player.isSneaking == 0

set standingPenalty to fStandingSpreadPenaltyGMST * standing


;------------------------------------------------
; Arm condition penalty
set weaponType to getWeaponType weapon

if weaponType == 3 || weaponType == 4
	set weaponHands to 1
else
	set weaponHands to 2
endif

if player.getAV LeftAttackCondition <= 0
	if player.getAV RightAttackCondition <= 0
		set crippledArms to 2
	else
		set crippledArms to 1
	endif
else
	if player.getAV RightAttackCondition <= 0
		set crippledArms to 1
	else
		set crippledArms to 0
	endif
endif

if crippledArms == 1
	if weaponHands == 1
		set armConditionPenalty to fCrippledArm1HSpreadPenaltyGMST 
	else
		set armConditionPenalty to fCrippledArm2HSpreadPenaltyGMST 
	endif
elseif crippledArms == 2
	if weaponHands == 1
		set armConditionPenalty to fCrippledArms1HSpreadPenaltyGMST 
	else
		set armConditionPenalty to fCrippledArms2HSpreadPenaltyGMST 
	endif
endif


;------------------------------------------------
; Weapon skill bonus
set weaponSkill to getWeaponSkill weapon

; Guns
if weaponSkill == 41
	set skillValue to player.getAV Guns
; Energy weapons
elseif weaponSkill == 34
	set skillValue to player.getAV EnergyWeapons
endif

if skillValue > 100
	set skillValue to 100
elseif skillValue < 0
	set skillValue to 0
endif
set skillBonusMult to 1 - (skillValue * 0.005)


;------------------------------------------------
; Skill + Strength requirement penalties
set weaponSkillReq to getWeaponRequiredSkill weapon
set reqDiff to weaponSkillReq - skillValue
if reqDiff > 100
	set reqDiff to 100
elseif reqDiff < 0
	set reqDiff to 0
endif
set skillReqPenalty to 0.0025 * reqDiff

set weaponStrReq to getWeaponRequiredStrength weapon
set strValue to player.getAV Strength
set reqDiff to weaponStrReq - strValue
if reqDiff > 10
	set reqDiff to 10
elseif reqDiff < 0
	set reqDiff to 0
endif
set strReqPenalty to 0.025 * reqDiff


;------------------------------------------------
; Player spread
set playerSpread to skillBonusMult*(runningPenalty+standingPenalty+unaimedPenalty+walkingPenalty+armConditionPenalty+skillReqPenalty+strReqPenalty)

if playerSpread < fMinGunSpreadValueGMST 
	set playerSpread to fMinGunSpreadValueGMST
endif


;------------------------------------------------
; Mouse Spread
set dt to getSecondsPassed
if dt != 0
	set HAngle to player.getAngle Z
	set VAngle to player.getAngle X

	set tmp to HAngle - lastHAngle
	set dhs to tmp % 360
	if dhs > 180
		set dhs to -1 * (360 - dhs)
	endif

	set dvs to VAngle - lastVAngle

	set s to (dhs*dhs)
	set s to s + (dvs*dvs)
	set s to (sqrt s)

	set v to s / dt

	set vAvg to (v + v1 + v2) / 3

	; Cap
	if vAvg > 200
		set vAvg to 200
	endif
	set tmp to vAvg / 20
	set tmp to tmp * tmp 

	set mouseSpread to tmp * 0.01

	set lastHAngle to HAngle
	set lastVAngle to VAngle

	set v2 to v1
	set v1 to v
endif


;------------------------------------------------
; Recoil Spread
if player.getAnimAction == 2
	if getIsAutomatic weapon == 0
		if attackTrap == 0
			set attackTrap to 1
			set recoilCooldown to 1.5
			if recoilSpread < 1.0
				set recoilSpread to recoilSpread + 0.2
			endif
		endif
	else
		set recoilCooldown to 1.5
		if recoilSpread < 1.0
			set recoilSpread to recoilSpread + 0.01
		endif
	endif
else
	set attackTrap to 0

	if recoilSpread > 0
		if recoilCooldown > 0
			set recoilCooldown to recoilCooldown - getSecondsPassed
		else
			set recoilSpread to 0
		endif
	endif
endif

printToConsole "recoil spread is %.4f" recoilSpread


;------------------------------------------------
; Accuracy Mult
set accuracyMult to 0.5 + recoilSpread + mouseSpread
if accuracyMult > 1.5
	set accuracyMult to 1.5
endif

set accuracyRank to + 1 (accuracyMult - 0.5) * 10

if lastAccuracyRank != accuracyRank 

	; Reset to rank 1 first
	if accuracyRank < lastAccuracyRank
		player.removePerk PNxFPSCrosshairSpreadPerk
	endif

	; Set to 50% by default
	player.addPerk PNxFPSCrosshairSpreadPerk

	; Increase to 60%
	if accuracyRank >= 2
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 70%
	if accuracyRank >= 3
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 80%
	if accuracyRank >= 4
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 90%
	if accuracyRank >= 5
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 100%
	if accuracyRank >= 6
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 110%
	if accuracyRank >= 7
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 120%
	if accuracyRank >= 8
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 130%
	if accuracyRank >= 9
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 140%
	if accuracyRank >= 10
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
	; Increase to 150%
	if accuracyRank >= 11
		player.addPerk PNxFPSCrosshairSpreadPerk
	endif
endif

set lastAccuracyRank to accuracyRank


;------------------------------------------------
; Weapon spread
;set weaponSpread to dbspread * getWeaponMinSpread weapon
set weaponMinSpread to getWeaponMinSpread weapon

set weaponSpread to (0.0125 * (weaponMinSpread * weaponMinSpread)) + (0.125 * weaponMinSpread)


;------------------------------------------------
; Total spread
set totalSpread to (accuracyMult * playerSpread) + weaponSpread


PrintToConsole "Player spread: %.4f" playerSpread
PrintToConsole "Weapon spread: %.4f" weaponSpread 
PrintToConsole "Weapon debug mult: %.4f" dbspread
PrintToConsole "Mouse speed: %.3f" v
printToConsole "Mouse spread: %.3f" mouseSpread
PrintToConsole "Total spread: %.4f" totalSpread


set spreadDeg to totalSpread * 5.95 ; 1 spread ~ 5.95 degrees

if unaimed == 1
	set fovDeg to getNumericIniSetting "fDefaultWorldFOV:display"
else
	set fovDeg to getWeaponSightFOV weapon
endif

;printToConsole "Fov: %.4f" fovDeg

set fovDeg to fovDeg * 1.175

; Should never happen
if fovDeg == 0
	set fovDeg to 75
endif

;PrintToConsole "Degree should be: %.4f" spreadDeg

set nextSpread to spreadDeg / fovDeg

if curSpread > nextSpread 
	set curSpread to curSpread - 0.0001 + ((nextSpread - curSpread) * 0.05)
	if curSpread < nextSpread 
		set curSpread to nextSpread 
	endif
elseif curSpread < nextSpread 
	set curSpread to curSpread + 0.003
	if curSpread > nextSpread 
		set curSpread to nextSpread 
	endif
endif

setUIFloat "HUDMainMenu\_PNxCrosshairSpread" curSpread 

End
}}}