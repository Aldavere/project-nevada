= PNxFPSZoomMain =

{{{
scn PNxFPSZoomMainScript

;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Control Flags

short enableFreeZoom
short stop
short update

;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Variables

short init
short toggleTrap
short keyTrap
short zoomTrap
short fovTrap 

; 1 = no weapon
; 2 = holstered weapon
; 3 = weapon without scope
; 4 = weapon with scope
short mode
short lastMode

short zooming
short reloading

float timer
short recoveryTime 

short zoomPressed
short altZoomPressed 
short zoomInPressed
short zoomOutPressed
short weaponFired
short weaponReloaded

ref weapon
ref lastWeapon
float defaultFOV
float curFOV
float nextFOV
float maxFOV
float minFOV
float stepSize
float tickSize
float bufferSize

; 0 = optical
; 1 = digital
short scopeType

; 0 = mouse zoom, keyboard internal
; 1 = keyboard zoom, mouse internal
short controlMode

short zoomKey
short altZoomKey

float tmp


;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Event Handling
Begin GameMode

; Stop zoom on load
if getGameLoaded == 1

	set lastMode to 0
	releaseKey zoomKey
	releaseKey altZoomKey

	PNxFPSZoomDigitalLPRef.moveTo player
	PNxFPSZoomDigitalLPRef.disable

	return
endif

; Die gracefully
if stop == 1
	set stop to 0

	releaseKey zoomKey
	releaseKey altZoomKey

	setStage PNxFPSZoomMain 0 ; Clean up
	resetQuest PNxFPSZoomMain 
	stopQuest PNxFPSZoomMain 

	return
endif

; Force an update
if update == 1
	set update to 0
	set lastMode to 0
endif

; Just set, faster than running checks
set zoomKey to getControl 6
set altZoomKey to 256 + getAltControl 6

; Clear flags
set zoomPressed to 0
set altZoomPressed to 0
set zoomInPressed to 0
set zoomOutPressed to 0
set weaponReloaded to 0

if isKeyPressed zoomKey == 1
	set zoomPressed to 1
endif

if isKeyPressed altZoomKey == 1
	set altZoomPressed to 1
endif

if isKeyPressed PNxFPSZoomConfig.zoomInKey == 1
	set zoomInPressed to 1
endif

if isKeyPressed PNxFPSZoomConfig.zoomOutKey == 1
	set zoomOutPressed to 1
endif

if player.getAnimAction == 9
	set weaponReloaded to 1
endif

End

;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Mode Setting
Begin GameMode

set weapon to player.getEquippedObject 5

if weapon == 0
	set mode to 1

elseif player.isWeaponOut == 0
	set mode to 2

elseif getWeaponHasScope weapon == 0
	set mode to 3

else
	set mode to 4

endif

; Switched mode or changed weapon
if lastMode != mode || weapon != lastWeapon

	; Clear up from previous zoom
	releaseKey zoomKey
	releaseKey altZoomKey
	set toggleTrap to 0
	set zooming to 0
	set reloading to 0

	; Write back default FOV if last weapon was scoped
	if lastWeapon != 0 && lastMode == 4
		setWeaponSightFOV defaultFOV lastWeapon
	endif

	; Use slower weapon zoom speed when non-scoped
	if mode == 1 || mode == 2 || mode == 3
		con_SetGameSetting "fIronSightsFOVTimeChange", "0.25"

	; Use instant zoom effect for scopes
	else
		con_SetGameSetting "fIronSightsFOVTimeChange", "0.0"

		set defaultFOV to getWeaponSightFOV weapon

		; Optical zoom
		if (listGetFormIndex ZRZoomType2Enabled weapon) == -1
			set scopeType to 0
			set stepSize to 10
			set bufferSize to 0
			set tickSize to 0

			; sniper range
			if defaultFOV <= 20
				set maxFOV to 10
				set curFOV to 20
				set minFOV to 30
	
			; long range
			elseif defaultFOV <= 30
				set maxFOV to 20
				set curFOV to 30
				set minFOV to 40
	
			; medium range
			elseif defaultFOV <= 35
				set maxFOV to 30
				set curFOV to 30
				set minFOV to 40
	
			; short range
			else
				set maxFOV to 40
				set curFOV to 40
				set minFOV to 40
			endif			

		; Digital zoom
		else
			set scopeType to 1
			set stepSize to 5
			set bufferSize to 10
			set tickSize to 0.5

			; sniper range
			if defaultFOV <= 20
				set maxFOV to 10
				set curFOV to 20
				set minFOV to 40
	
			; long range
			elseif defaultFOV <= 30
				set maxFOV to 20
				set curFOV to 30
				set minFOV to 40
	
			; medium range
			elseif defaultFOV <= 35
				set maxFOV to 30
				set curFOV to 40
				set minFOV to 45
	
			; short range
			else
				set maxFOV to 40
				set curFOV to 45
				set minFOV to 50
			endif
		endif

		; Init with starting FOV
		setWeaponSightFOV curFOV, weapon
		set nextFOV to curFOV 

	endif

endif

set lastMode to mode
set lastWeapon to weapon

End

;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Zoom Toggle
Begin GameMode

;---------------------------------------------------------------
; Default  zooming behaviour
if mode == 1 || mode == 2 || (mode == 3 && PNxFPSZoomConfig.toggleNonScoped == 0) || (mode == 4 && PNxFPSZoomConfig.toggleScoped == 0)
	if zoomPressed == 1 || altZoomPressed == 1
		set zooming to 1
	else
		set zooming to 0
	endif

	return

;---------------------------------------------------------------
; Toggle zooming
elseif mode == 4 || (mode == 3 && PNxFPSZoomConfig.toggleNonScoped == 1) || (mode == 4 && PNxFPSZoomConfig.toggleScoped == 1)

	; Decide which key to use as primary zoom
	if zooming == 0 && reloading == 0 && toggleTrap == 0
		if altZoomPressed == 1
			set controlMode to 0
		elseif zoomPressed == 1
			set controlMode to 1
		endif
	endif

	; Toggle
	if (altZoomPressed && controlMode == 0 ) || (zoomPressed && controlMode == 1)
		if toggleTrap == 0
			set toggleTrap to 1

			; Zoom in
			if zooming == 0
				if controlMode == 0
					holdKey zoomKey
				else
					holdKey altZoomKey
				endif
				set zooming to 1

			; Zoom out
			else
				releaseKey zoomKey
				releaseKey altZoomKey
				set zooming to 0
			endif
		endif

	else
		if toggleTrap == 1
			set toggleTrap to 0
		endif
	endif

	; Handle reload
	if weaponReloaded == 1
		if zooming == 1 && reloading == 0
			releaseKey zoomKey
			releaseKey altZoomKey
			set zooming to 0
			set reloading to 1
		endif
	else
		if reloading == 1
			if controlMode == 0
				holdKey zoomKey
			else
				holdKey altZoomKey
			endif
			set zooming to 1
			set reloading to 0
		endif
	endif

endif

End


;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Change Zoom Level
Begin GameMode

if mode != 4
	return
endif

if zooming == 0
	set fovTrap to 0
	set zoomTrap to 0

	PNxFPSZoomDigitalLPRef.disable

	set nextFOV to curFOV
	return	
endif

set tmp to nextFOV - curFOV
set tmp to abs tmp

if zoomInPressed == 1

	if nextFOV > maxFOV && zoomTrap == 0 && (bufferSize == 0 || tmp < bufferSize)
			set nextFOV to nextFOV - stepSize
			if bufferSize == 0
				set zoomTrap to 1
			endif
	endif

elseif zoomOutPressed == 1

	if nextFOV < minFOV && zoomTrap == 0 && (bufferSize == 0 || tmp < bufferSize)
		set nextFOV to nextFOV + stepSize
		if bufferSize == 0
			set zoomTrap to 1
		endif
	endif

else
	set zoomTrap to 0
endif

set tmp to nextFOV - curFOV

if tmp != 0

	; Lazy zoom
	if tickSize > 0
		if tmp > 0
			set curFOV to curFOV + tickSize

			if nextFOV < curFOV
				set curFOV to nextFOV
			endif
		else
			set curFOV to curFOV - tickSize

			if nextFOV > curFOV
				set curFOV to nextFOV
			endif
		endif

	; Instant zoom
	else
		set curFOV to nextFOV
	endif

	set fovTrap to 1

	if scopeType == 0
		imod PNxFPSZoomScopeBlurISFX
		playSound OBJSwitchElevator
	else
		PNxFPSZoomDigitalLPRef.moveTo player
		PNxFPSZoomDigitalLPRef.enable
	endif

	setWeaponSightFOV curFOV, weapon

else

	if fovTrap == 1
		set fovTrap to 0

		if scopeType == 1
			player.playsound UIVATSSelectTargetPart
			PNxFPSZoomDigitalLPRef.disable
		endif
	endif
endif

End
}}}