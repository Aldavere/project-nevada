= ZRMain =

== Stage 0 ==

{{{
; Clean up

; Reset gamesettings to defaults
con_SetGameSetting "fIronSightsFOVTimeChange", "0.25"
con_SetGameSetting "fGunWobbleMultScope", "1.0"

; Stop zooming scripts
if getQuestRunning ZRZoomType1 == 1
	set ZRZoomType1.stop to 1
endif
if getQuestRunning ZRZoomType2a == 1
	set ZRZoomType2a.stop to 1
endif
if getQuestRunning ZRZoomType2b == 1
	set ZRZoomType2b.stop to 1
endif

; Remove breath holding bonus
player.dispel ZRHoldBreathBonus
}}}

== Script ==

{{{

scn ZRMainScript

short init
short zoomTrap
short keyTrap

; 1 = no weapon
; 2 = holstered weapon
; 3 = weapon without scope
; 4 = weapon with scope
short mode
short lastMode

short zooming
short reloading
short holdingBreath

float timer
short recoveryTime 

short weaponFired
short weaponReloaded

ref weapon
ref lastWeapon
float weaponFOV
float weaponRange

; 0 = optical single-step zoom
; 1 = optical 2-step zoom
; 2 = optical 3-step zoom (short range)
; 3 = optical 3-step zoom (long range)
; 4 = digital zoom
short scopeType

; Keys from event detection
short zoomPressed
short altZoomPressed 
short holdBreathPressed

; 0 = mouse zoom, keyboard internal
; 1 = keyboard zoom, mouse internal
short controlMode

; External control
short stop
short update
short sleep
float sleepTime

;----------------------------------------------------------------------------------------------------------------------------------------------
; Handle events
Begin GameMode

; Stop zoom on load
if getGameLoaded == 1

	set lastMode to 0
	releaseKey ZRConfig.zoomKey
	releaseKey ZRConfig.altZoomKey

	return
endif

; Die gracefully
if stop == 1
	set stop to 0

	releaseKey ZRConfig.zoomKey
	releaseKey ZRConfig.altZoomKey

	setStage ZRMain 0 ; Clean up
	resetQuest ZRMain
	stopQuest ZRMain

	return
endif

; Force an update
if update == 1
	set update to 0
	set lastMode to 0
endif

; Just set, faster than running checks
set ZRConfig.zoomKey to getControl 6
set ZRConfig.altZoomKey to 256 + getAltControl 6

; Clear flags
set zoomPressed to 0
set altZoomPressed to 0
set holdBreathPressed to 0
set weaponFired to 0
set weaponReloaded to 0

if isKeyPressed  ZRConfig.zoomKey == 1
	set zoomPressed to 1
endif

if isKeyPressed ZRConfig.altZoomKey == 1
	set altZoomPressed to 1
endif

if isKeyPressed ZRConfig.holdBreathKey == 1
	set holdBreathPressed to 1
endif

if player.getAnimAction == 2
	set weaponFired to 1
endif

if player.getAnimAction == 9
	set weaponReloaded to 1
endif

End

;----------------------------------------------------------------------------------------------------------------------------------------------
; Mode setting block
Begin GameMode

set weapon to player.getEquippedObject 5

if weapon == 0
	set mode to 1

elseif player.isWeaponOut == 0
	set mode to 2

elseif getWeaponHasScope weapon == 0
	set mode to 3

else
	set mode to 4

endif

; Switched mode or changed weapon
if lastMode != mode || weapon != lastWeapon

	; Clear up from previous zoom
	releaseKey ZRConfig.zoomKey
	releaseKey ZRConfig.altZoomKey
	set zoomTrap to 0
	set zooming to 0
	set reloading to 0

	; Use slower zoom speed when non-scoped
	if mode == 1 || mode == 2 || mode == 3
		con_SetGameSetting "fIronSightsFOVTimeChange", "0.25"

		; Stop all zooming scripts
		if getQuestRunning ZRZoomType1 == 1
			set ZRZoomType1.stop to 1
		endif
		if getQuestRunning ZRZoomType2a == 1
			set ZRZoomType2a.stop to 1
		endif
		if getQuestRunning ZRZoomType2b == 1
			set ZRZoomType2b.stop to 1
		endif

	; Use instant zoom effect for scopes
	else
		set weaponFOV to getWeaponSightFOV weapon
		set weaponRange to getWeaponMaxRange weapon

		if ZRConfig.digitalZoomMode != 0 && (listGetFormIndex ZRZoomType2Enabled weapon) != -1
			con_SetGameSetting "fIronSightsFOVTimeChange", "0.0"
			set scopeType to 4
		else

			if ZRConfig.slowZoom == 1
				con_SetGameSetting "fIronSightsFOVTimeChange", "0.25"
			else
				con_SetGameSetting "fIronSightsFOVTimeChange", "0.0"
			endif

			; 3-step zoom (long range)
			if weaponFOV <= 20
				set scopeType to 3

			; 3-step zoom (short range)
			elseif weaponFOV <= 30
				set scopeType to 2

			; 2-step zoom
			elseif weaponFOV <= 35
				set scopeType to 1

			; 1-step zoom
			else
				set scopeType to 0
			endif
		endif

		; Optical zoom
		if scopeType == 1 || scopeType == 2  || scopeType == 3

			; Stop digital zooming script
			if ZRConfig.digitalZoomMode == 2
				if getQuestRunning ZRZoomType2a == 1
					set ZRZoomType2a.stop to 1
				endif
			elseif ZRConfig.digitalZoomMode == 1
				if getQuestRunning ZRZoomType2b == 1
					set ZRZoomType2b.stop to 1
				endif
			endif

			; Start optical zooming script
			if getQuestRunning ZRZoomType1 == 0
				setStage ZRZoomType1 1
				startQuest ZRZoomType1

			; Reset running script
			else
				setStage ZRZoomType1 0
				setStage ZRZoomType1 1

			endif

		; Digital zoom
		elseif scopeType == 4

			; Stop optical zooming script
			if getQuestRunning ZRZoomType1 == 1
				set ZRZoomType1.stop to 1
			endif

			if ZRConfig.digitalZoomMode == 2

				; Stop digital zooming script b
				if getQuestRunning ZRZoomType2b == 1
					set ZRZoomType2b.stop to 1
				endif

				; Start digital zooming script a
				if getQuestRunning ZRZoomType2a == 0
					setStage ZRZoomType2a 1
					startQuest ZRZoomType2a

				; Reset running script a
				else
					setStage ZRZoomType2a 0
					setStage ZRZoomType2a 1
				endif

			elseif ZRConfig.digitalZoomMode == 1

				; Stop digital zooming script a
				if getQuestRunning ZRZoomType2a == 1
					set ZRZoomType2a.stop to 1
				endif

				; Start digital zooming script b
				if getQuestRunning ZRZoomType2b == 0
					setStage ZRZoomType2b 1
					startQuest ZRZoomType2b

				; Reset running script b
				else
					setStage ZRZoomType2b 0
					setStage ZRZoomType2b 1
				endif

			endif

		endif

	endif

	; Reset zoom when mode changed while zooming
;	if zooming == 1
;		releaseKey ZRConfig.zoomKey
;		releaseKey ZRConfig.altZoomKey
;		set zoomTrap to 0
;		set zooming to 0
;	endif

endif

set lastMode to mode
set lastWeapon to weapon

End

;----------------------------------------------------------------------------------------------------------------------------------------------
; Hold breath block
Begin GameMode

; Start holding breath
if holdingBreath == 0 && recoveryTime == 0 && mode == 4 && zooming == 1 && holdBreathPressed == 1 && weaponFired == 0 ; player.getAnimAction != 2
	set holdingBreath to 1
	player.castimmediateonself ZRHoldBreathBonus
	set timer to 1
	set recoveryTime to 2 ; Start with 2 seconds minimum recovery time

	if getPCIsSex Female == 1
		playSound ZRHoldBreathFemale
	else
		playSound ZRHoldBreath
	endif

	; Clear flag
	;set ZREventDetection.weaponFired to 0

; Already holding breath or recovering
else
	if recoveryTime > 0
		if timer > 0
			set timer to timer - getSecondsPassed
		else
			set timer to 1

			; Get qeued weapon flag
			;set weaponFired to ZREventDetection.weaponFired

			; Stop holding breath
			if holdBreathPressed == 0 || zooming == 0 || mode != 4 || weaponFired == 1
				if holdingBreath == 1
					set holdingBreath to 0
					player.dispel ZRHoldBreathBonus
			
					if recoveryTime >= 4
						if getPCIsSex Female == 1
							playSound ZRReleaseBreathMediumFemale
						else
							playSound ZRReleaseBreathMedium
						endif
					else
						if getPCIsSex Female == 1
							playSound ZRReleaseBreathShortFemale
						else
							playSound ZRReleaseBreathShort
						endif
					endif
				endif
			endif

			; Clear flag
			;set ZREventDetection.weaponFired to 0

			; Recover
			if holdingBreath == 0
				if recoveryTime >= 4
					con_SetGameSetting "fGunWobbleMultScope", "4.0"
				elseif recoveryTime >= 3
					con_SetGameSetting "fGunWobbleMultScope", "3.0"
				elseif recoveryTime >= 2
					con_SetGameSetting "fGunWobbleMultScope", "2.0"
				elseif recoveryTime >= 1
					con_SetGameSetting "fGunWobbleMultScope", "1.0"
				endif

				set recoveryTime to recoveryTime - 1

			; Keep Holding
			else
				if recoveryTime >= 6
					set holdingBreath to 0
					player.dispel ZRHoldBreathBonus
					con_SetGameSetting "fGunWobbleMultScope", "4.0"

					if getPCIsSex Female == 1
						playSound ZRReleaseBreathLongFemale
					else
						playSound ZRReleaseBreathLong
					endif
				else
					set timer to 1
					set recoveryTime to recoveryTime + 1
					playSound ZRHeartBeat
				endif
			endif
		endif
	endif
endif



End

;----------------------------------------------------------------------------------------------------------------------------------------------
; Main block
Begin GameMode

;---------------------------------------------------------------
; Default  zooming behaviour
if mode == 1 || mode == 2 || (mode == 3 && ZRConfig.toggleNonScoped == 0) || (mode == 4 && ZRConfig.toggleScoped == 0)
	if zoomPressed == 1 || altZoomPressed == 1
		set zooming to 1
	else
		set zooming to 0
	endif

	return

;---------------------------------------------------------------
; Toggle zooming
elseif mode == 4 || (mode == 3 && ZRConfig.toggleNonScoped == 1) || (mode == 4 && ZRConfig.toggleScoped == 1)

	; Decide which key to use as primary zoom
	if zooming == 0 && reloading == 0 && zoomTrap == 0
		if altZoomPressed == 1
			set controlMode to 0
		elseif zoomPressed == 1
			set controlMode to 1
		endif
	endif

	; Toggle
	if (altZoomPressed && controlMode == 0 ) || (zoomPressed && controlMode == 1)
		if zoomTrap == 0
			set zoomTrap to 1

			; Zoom in
			if zooming == 0
				if controlMode == 0
					holdKey ZRConfig.zoomKey
				else
					holdKey ZRConfig.altZoomKey
				endif
				set zooming to 1

			; Zoom out
			else
				releaseKey ZRConfig.zoomKey
				releaseKey ZRConfig.altZoomKey
				set zooming to 0
			endif
		endif

	else
		if zoomTrap == 1
			set zoomTrap to 0
		endif
	endif

	; Handle reload
	if weaponReloaded == 1
		if zooming == 1 && reloading == 0
			releaseKey ZRConfig.zoomKey
			releaseKey ZRConfig.altZoomKey
			set zooming to 0
			set reloading to 1
		endif
	else
		if reloading == 1
			if controlMode == 0
				holdKey ZRConfig.zoomKey
			else
				holdKey ZRConfig.altZoomKey
			endif
			set zooming to 1
			set reloading to 0
		endif
	endif

	return

endif

End

}}}

= ZRZoomType1 =

== Script: ==

{{{
scn ZRZoomType1Script

; Zooming in discrete steps

short zoomTrap

ref weapon
float defaultFOV

; 1: 2-step zoom
; 2: 3-step zoom
short maxStep

short fovStep0
short fovStep1
short fovStep2

short step
short lastStep
float tmp

short zoomInPressed
short zoomOutPressed

short stop

;----------------------------------------------------------------------------------------------------------------------------------------------
; Process events
Begin GameMode

if stop == 1
	set stop to 0
	setStage ZRZoomType1 0
	stopQuest ZRZoomType1
	return
endif

; Clear flags
set zoomInPressed to 0
set zoomOutPressed to 0

if isKeyPressed ZRConfig.zoomInKey == 1
	set zoomInPressed to 1
endif

if isKeyPressed ZRConfig.zoomOutKey == 1
	set zoomOutPressed to 1
endif


if ZRMain.zooming == 0
	return
endif

if zoomInPressed == 1
	if zoomTrap == 0 && step < maxStep
		set zoomTrap to 1
		set step to step + 1
		playSound OBJSwitchElevator
		imod ZRZoomBlur 
	endif
elseif zoomOutPressed == 1
	if zoomTrap == 0 && step > 0
		set zoomTrap to 1
		set step to step - 1
		playSound OBJSwitchElevator
		imod ZRZoomBlur 
	endif
else
	set zoomTrap to 0
endif

if step == lastStep
	return
endif

if step == 0
	set tmp to fovStep0
elseif step == 1
	set tmp to fovStep1
elseif step == 2
	set tmp to fovStep2
endif

setWeaponSightFOV tmp, weapon	

set lastStep to step

End
}}}

= ZRZoomType2a =

== Script: ==

{{{
scn ZRZoomType2aScript

; Continuous zooming, auto-mode

short zoomTrap

ref weapon
float defaultFOV
float curFOV
float lastFOV

; 0 - disabled
; 1 - auto zoom in
; 2 - auto zoom out
short auto

; 0 - normal
; 1 - double
short speed

; normal - 0.25
; double - 0.5
float inc

short zoomInPressed
short zoomOutPressed

short stop

;----------------------------------------------------------------------------------------------------------------------------------------------
; Process events
Begin GameMode

if stop == 1
	set stop to 0
	setStage ZRZoomType2a 0
	stopQuest ZRZoomType2a
	return
endif

if getGameLoaded == 1
	ZRDigitalZoomStartRef.moveTo player
	ZRDigitalZoomStartRef.disable
endif

; Clear flags
set zoomInPressed to 0
set zoomOutPressed to 0

if isKeyPressed ZRConfig.zoomInKey == 1
	set zoomInPressed to 1
endif

if isKeyPressed ZRConfig.zoomOutKey == 1
	set zoomOutPressed to 1
endif


if ZRMain.zooming == 0
	if auto == 0
		return	
	else
		set auto to 0
		ZRDigitalZoomStartRef.disable
		return
	endif
endif

if zoomInPressed == 1 && (auto != 1 || speed == 0)
	if auto == 1
		set speed to 1
		set inc to 0.5
	elseif auto == 2
		set auto to 0
		player.playsound ZRDigitalZoomEnd
		ZRDigitalZoomStartRef.disable
	else
		set auto to 1
		set speed to 0
		set inc to 0.25
	endif

elseif zoomOutPressed == 1 && (auto != 2 || speed == 0)
	if auto == 2
		set speed to 1
		set inc to 0.5
	elseif auto == 1
		set auto to 0
		player.playsound ZRDigitalZoomEnd
		ZRDigitalZoomStartRef.disable
	else
		set auto to 2
		set speed to 0
		set inc to 0.25
	endif
endif

; auto mode
if auto == 1
	if curFOV > 10
		set curFOV to curFOV - inc
		ZRDigitalZoomStartRef.moveTo player
		ZRDigitalZoomStartRef.enable
	else
		set auto to 0
		player.playsound ZRDigitalZoomEnd
		ZRDigitalZoomStartRef.disable
	endif

elseif auto == 2
	if curFOV < 45
		set curFOV to curFOV + inc
		ZRDigitalZoomStartRef.moveTo player
		ZRDigitalZoomStartRef.enable
	else
		set auto to 0
		player.playsound ZRDigitalZoomEnd
		ZRDigitalZoomStartRef.disable
	endif
endif

if lastFOV == curFOV 
	return
endif

setWeaponSightFOV curFOV , weapon	

set lastFOV to curFOV 

End
}}}

= ZRZoomType2b =

== Stage 0 ==

{{{
; Write back

ref weapon
float defaultFOV

set weapon to ZRZoomType2b.weapon 
set defaultFOV to ZRZoomType2b.defaultFOV

setWeaponSightFOV defaultFOV weapon
}}}

== Stage 1 ==

{{{
; Init

ref tmpWeapon
float tmpFOV

set ZRZoomType2b.weapon to ZRmain.weapon
set ZRZoomType2b.defaultFOV to ZRmain.weaponFOV
set ZRZoomType2b.curFOV to ZRmain.weaponFOV
set ZRZoomType2b.nextFOV to ZRmain.weaponFOV
}}}

== Script ==

{{{
scn ZRZoomType2bScript

; Continuous zooming, manual mode

short zoomTrap

ref weapon
float defaultFOV
float curFOV
float nextFOV

short zoomInPressed
short zoomOutPressed

float tmp
short trap

short stop


;----------------------------------------------------------------------------------------------------------------------------------------------
; Process events
Begin GameMode

if stop == 1
	set stop to 0
	setStage ZRZoomType2b 0
	stopQuest ZRZoomType2b
	return
endif

if getGameLoaded == 1
	ZRDigitalZoomStartRef.moveTo player
	ZRDigitalZoomStartRef.disable
endif

; Clear flags
set zoomInPressed to 0
set zoomOutPressed to 0

if isKeyPressed ZRConfig.zoomInKey == 1
	set zoomInPressed to 1
endif

if isKeyPressed ZRConfig.zoomOutKey == 1
	set zoomOutPressed to 1
endif


if ZRMain.zooming == 0
	set trap to 0
	ZRDigitalZoomStartRef.disable
	set nextFOV to curFOV
	return	
endif

set tmp to nextFOV - curFOV
set tmp to abs tmp

if zoomInPressed == 1

	if nextFOV > 10 && tmp < 10
		set nextFOV to nextFOV - 5
	endif

elseif zoomOutPressed == 1

	if nextFOV < 45 && tmp < 10
		set nextFOV to nextFOV + 5
	endif
endif

set tmp to nextFOV - curFOV

if tmp > 0
	set curFOV to curFOV + 0.5

	if nextFOV < curFOV
		set curFOV to nextFOV
	endif

	set trap to 1
	ZRDigitalZoomStartRef.moveTo player
	ZRDigitalZoomStartRef.enable

elseif tmp < 0
	set curFOV to curFOV - 0.5

	if nextFOV > curFOV
		set curFOV to nextFOV
	endif

	set trap to 1
	ZRDigitalZoomStartRef.moveTo player
	ZRDigitalZoomStartRef.enable

else
	if trap == 1
		set trap to 0
		player.playsound ZRDigitalZoomEnd
		ZRDigitalZoomStartRef.disable
	endif
	return
endif

setWeaponSightFOV curFOV , weapon

End
}}}